services:
  remote-process:
    build:
      context: .
      dockerfile: build/server/Dockerfile
    ports:
      - "50051:50051"
    environment:
      - SERVER_CERT_PATH=/certs/server-cert.pem
      - SERVER_KEY_PATH=/certs/server-key.pem
      - CA_CERT_PATH=/certs/ca-cert.pem
      - APPLICATION_PORT=50051
      - JWT_SECRET=${JWT_SECRET}
      - ENV=development
    volumes:
      - ./certs/dev:/certs:ro
    healthcheck:
      test: [ "CMD", "/app/grpc_health_check.sh" ]
      interval: 3s
      timeout: 5s
      retries: 2

  orchestrator:
    build:
      context: .
      dockerfile: build/client/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - CLIENT_CERT_PATH=/certs/client-cert.pem
      - CLIENT_KEY_PATH=/certs/client-key.pem
      - CA_CERT_PATH=/certs/ca-cert.pem
      - HTTP_PORT=8080
      - GRPC_SERVER=remote-process:50051
      - JWT_TOKEN=${JWT_TOKEN}
    volumes:
      - ./certs/dev:/certs:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      remote-process:
        condition: service_healthy

  tests:
    build:
      context: .
      dockerfile: build/tests/Dockerfile
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - JWT_TOKEN=${JWT_TOKEN}
      - GRPC_SERVER_ADDRESS=remote-process:50051
      - API_BASE_URL=http://orchestrator:8080
    volumes:
      - ./certs/dev:/certs:ro
    depends_on:
      orchestrator:
        condition: service_healthy
