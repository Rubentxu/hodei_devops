syntax = "proto3";

package remote_process;

option go_package = "dev.rubentxu.devops-platform/adapters/grpc/protos/remote_process";

// RemoteProcessService proporciona capacidades para la ejecución remota de procesos
service RemoteProcessService {
  // Gestión de Procesos
  rpc StartProcess(stream ProcessStartRequest) returns (stream ProcessOutput);
  rpc StopProcess(ProcessStopRequest) returns (ProcessStopResponse);

  // Monitorización
  rpc MonitorHealth(stream HealthCheckRequest) returns (stream HealthStatus);

  // ... otros métodos
}

// Mensaje para iniciar un proceso
message ProcessStartRequest {
  repeated string command = 1;      // Comando a ejecutar y sus argumentos
  map<string, string> environment = 2; // Variables de entorno
  string working_directory = 3;        // Directorio de trabajo
  string process_id = 4;             // Identificador del proceso (para streaming de múltiples comandos)
}

// Mensaje de salida del proceso
message ProcessOutput {
  string process_id = 1; // Identificador del proceso
  string output = 2;    // Salida estándar o error
  bool is_error = 3; // Indica si la salida es un error
}

// Mensaje para detener un proceso
message ProcessStopRequest {
  string process_id = 1; // Identificador del proceso a detener
}

// Mensaje de respuesta para StopProcess
message ProcessStopResponse {
  bool success = 1;
  string message = 2;
}

// Mensaje para solicitar la monitorización del estado de un proceso
message HealthCheckRequest {
  string process_id = 1; // Identificador del proceso
  int64 check_interval = 2; // Intervalo de comprobación en segundos
}

// Mensaje con el estado actual de un proceso
message HealthStatus {
  string process_id = 1; // Identificador del proceso
  bool is_running = 2;  // Indica si el proceso está en ejecución
  string status = 3;
  bool is_healthy = 4; // Indica si el proceso está saludable
}